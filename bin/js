#!/usr/bin/env node
const pkg = require('../package.json')
const { directories } = require('../config.json')
const { createWriteStream } = require('fs-promise')
const browserify = require('browserify')
const debug = require('debug')(`${pkg.name}:build:js`)

/**
 * Transpiles JavaScript using Browserify, Babelify, and Envify.
 * @param {String} fileName
 * @param {String} outputFileName
 * @param {String} ignoreFile
 * @param {Array}  plugins
 * @param {Object} params
 * @return {Promise}
 */
function transpile ({
	fileName = '',
	outputFileName = fileName,
	ignoreFile = '',
	plugins = []
} = {}) {
	return new Promise((resolve, reject) => {
		const stream = browserify(`${directories.src}/scripts/${fileName}.js`)
			.ignore(ignoreFile)
			.transform('babelify', { plugins, presets: ['latest'] })
			.bundle()
			.pipe(createWriteStream(`${directories.dist}/${outputFileName}.js`))
		stream.on('error', reject)
		stream.on('finish', resolve)
	})
}

module.exports = (message = 'transpiling JavaScript files') => {
	debug(message)
	return transpile({
		fileName: 'index',
		outputFileName: 'main'
	})
}
